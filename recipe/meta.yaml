{% set name = "openmm-dlext" %}
{% set version = "0.2.1" %}
{% set cuda_major = (cuda_compiler_version | default("0.0", true)).split(".")[0] | int %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/SSAGESLabs/openmm-dlext/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 9535e2ffe8336cbe4e403c6066f0539265bc8dd5e0f2827ff4cc955190aca49e

build:
  number: 9
  skip: true  # [python_impl == "pypy"]
  skip: true  # [(win) or (cuda_compiler_version in (undefined, 'None') and linux) or ((cuda_compiler_version != '10.2') and (ppc64le))]
  missing_dso_whitelist:
    - "*/libcuda.*"    # [linux]
    - "*/libOpenCL.*"  # [unix]
  rpaths:
    - lib/

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - swig                                   # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - dlpack                                 # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [linux and cuda_compiler_version != "None"]
    - cmake
    - make
  host:
    - python
    - pip
    - swig
    - openmm
    - dlpack >=0.5
    - pybind11
    {% if linux and cuda_major >= 12 %}
    - cuda-version {{ cuda_compiler_version }}
    - cuda-profiler-api
    - cuda-driver-dev
    {% endif %}
  run:
    - python
    - {{ pin_compatible('openmm', max_pin='x.x') }}
  
test:
  requires:
    {% if linux and cuda_major >= 12 %}
    - cuda-driver-dev
    - cuda-compat
    {% endif %}
  imports:
    - openmm_dlext  # [cuda_compiler_version == "None"]

about:
  home: https://github.com/SSAGESLabs/openmm-dlext
  license: MIT
  license_family: MIT
  license_file: LICENSE.md
  summary: Plugin for OpenMM providing simulation data wrappers as DLPack data structures
  description: |
    The plugin is intended to provide a OpenMM::Force derived class that does no direct computation,
    but instead uses DLPack wrappers around CPU or GPU OpenMM::Platform data for an initialized
    instance of OpenMM::Contex, and a callback interface to perform computations on such data
    outside the plugin.
  doc_url: https://github.com/SSAGESLabs/openmm-dlext
  dev_url: https://github.com/SSAGESLabs/openmm-dlext

extra:
  recipe-maintainers:
    - pabloferz
    - nrouizem
